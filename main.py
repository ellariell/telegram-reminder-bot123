
import asyncio
import logging
from datetime import time, datetime
from aiogram import Bot, Dispatcher, F
from aiogram.enums import ParseMode
from aiogram.types import Message
from aiogram.client.default import DefaultBotProperties
from aiogram.filters import CommandStart

TOKEN = "7968749408:AAFOgRg8mKlVAzTWlgjdMOcj33hnYe2vM-Q"

# ‚úÖ –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞ —Å –Ω–æ–≤—ã–º —Å–ø–æ—Å–æ–±–æ–º –∑–∞–¥–∞–Ω–∏—è parse_mode
bot = Bot(token=TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))
dp = Dispatcher()

# üí¨ –ü—Ä–∏–º–µ—Ä –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
@dp.message(CommandStart())
async def on_start(message: Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç-–Ω–∞–ø–æ–º–∏–Ω–∞–ª–∫–∞ üòä –ì–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")

# üß† –ü—Ä–∏–º–µ—Ä —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
async def send_reminder(chat_id: int, task: str):
    await bot.send_message(chat_id, f"<b>{task}</b>")

# ‚è∞ –§–æ–Ω–æ–≤–∞—è –∑–∞–¥–∞—á–∞
async def reminder_loop(chat_id: int):
    while True:
        now = datetime.now().time()

        schedule = {
            time(5, 50): "–ü–æ–¥—ä—ë–º, –±–æ–µ—Ü! üëÄ",
            time(6, 10): "–ó–∞–≤—Ç—Ä–∞–∫ ‚Äî –≤–∞–∂–µ–Ω, –∫–∞–∫ —à—Ç–∞–Ω–≥–∞! üç≥",
            time(11, 30): "–û–±–µ–¥–µ–Ω–Ω—ã–π —Å–∏–≥–Ω–∞–ª! üîî",
            time(16, 30): "–í—Ä–µ–º—è –∫–∞—á–∞! üèãÔ∏è‚Äç‚ôÇÔ∏è",
            time(18, 0): "–£–∂–∏–Ω–∞—Ç—å –ø–æ—Ä–∞! üçΩ",
            time(23, 0): "–û—Ç–±–æ–π! –°–ø–æ–∫–æ–π–Ω–æ–π –Ω–æ—á–∏ üõå"
        }

        for task_time, task_text in schedule.items():
            if now.hour == task_time.hour and now.minute == task_time.minute:
                await send_reminder(chat_id, task_text)
                await asyncio.sleep(60)  # –Ω–µ —Å–ø–∞–º–∏–º

        await asyncio.sleep(20)

# üöÄ –°—Ç–∞—Ä—Ç –±–æ—Ç–∞
async def main():
    logging.basicConfig(level=logging.INFO)
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
